version: '3.7'

networks:
  vault-demo:
    ipam:
      driver: default
      config:
        - subnet: "10.5.0.0/16"

services:
  vault:
    depends_on:
      keycloak:
        condition: service_healthy
    image: hashicorp/vault-enterprise:latest
    restart: always
    volumes:
      - ./vault:/vault/config:rw
      - ./vault/audit_logs:/var/log/vault:rw
      - /vault/data
    ports:
      - "8200:8200/tcp"
    cap_add:
      - IPC_LOCK
    container_name: vault
    entrypoint: "vault server -config=/vault/config"
    environment:
      - VAULT_LICENSE=${VAULT_LICENSE}
    networks:
      - vault-demo
  vault-agent:
    depends_on: [vault]
    image: hashicorp/vault-enterprise:latest
    restart: always
    ports:
      - "8100:8200/tcp"
    volumes:
      - ./vault-agent:/vault-agent:rw
    environment:
      VAULT_ADDR: "http://vault:8200"
    container_name: vault-agent
    entrypoint: "vault agent -config=/vault-agent/vault-agent.hcl"
    networks:
      - vault-demo
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    networks:
      - vault-demo
  keycloak:
    image: nicklhw/keycloak
    container_name: keycloak
    build:
      context: ./keycloak
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KC_DB_URL: "jdbc:postgresql://postgres:5432/keycloak"
      KC_METRICS_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: passw0rd
    command: ["start-dev"]
    ports:
      - 8080:8080
    depends_on:
      - postgres
    networks:
      - vault-demo



